{"data":{"site":{"siteMetadata":{"testTemplate":"from wasabi import msg\nfrom black import format_str, FileMode\n\nfile_mode = FileMode()\n\ndef blacken(code):\n    try:\n        return format_str(code, mode=file_mode)\n    except:\n        return code\n\n__msg__ = msg\n__solution__ = blacken(\"\"\"${solution}\"\"\")\n\n${solution}\n\n${test}\n\ntry:\n    test()\nexcept AssertionError as e:\n    __msg__.fail(e)","juniper":{"repo":"throughput-ec/ec_workshops_py","branch":"binder","kernelType":"python3","lang":"python","debug":false}}},"allCode":{"edges":[{"node":{"name":"exc_01_02","code":"# Copy, paste, and run any code from Project Pythia's readings.\n# Feel free to change some of the values so that you see \n# how it behaves."}},{"node":{"name":"exc_01_03","code":"import json\n\n# This code will run relative to the root of the repo, so we can load files\nwith open(\"exercises/bookquotes.json\") as f:\n    DATA = json.loads(f.read())\n\n# Print the first record in the DATA\nprint(___[____])\n\n# Assign the length of DATA to some_var\nsome_var = ___\n"}},{"node":{"name":"solution_01_03 copy","code":"import json\n\n# This code will run relative to the root of the repo, so we can load files\nwith open(\"exercises/bookquotes.json\") as f:\n    DATA = json.loads(f.read())\n\n# Print the first record in the DATA\nprint(DATA[0])\n\n# Assign the length of DATA to some_var\nsome_var = len(DATA)\n"}},{"node":{"name":"solution_01_01","code":"import pandas as pd\n\ndf = pd.read_csv('https://raw.githubusercontent.com/LinkedEarth/Pyleoclim_util/master/example_data/soi_data.csv',skiprows=0, header=1)\ndf.head()"}},{"node":{"name":"exc_01_01","code":"import _______ as pd\n\ndf = pd.______('https://raw.githubusercontent.com/LinkedEarth/Pyleoclim_util/master/example_data/soi_data.csv',skiprows=0, header=1)\ndf.head()"}}]}}}